version = new ProjectVersion(0, 1)

ext.versionFile = file('version.properties')

task loadVersion() {
	project.version = readVersion()
}

ProjectVersion readVersion() {
	logger.quiet 'Reading the version file.'
	
	if(!versionFile.exists()) {
		throw new GradleException("Required version file does note exist: $versionFile.canonicalPath")
	}
	
	Properties versionProps = new Properties()
	
	versionFile.withInputStream { stream ->
		versionProps.load(stream)
	}
	
	new ProjectVersion(
		versionProps.major.toInteger(),
		versionProps.minor.toInteger(),
		versionProps.release.toBoolean())
}

task first {
	println "first"
}

task second {
	println "second"
}

task third {
	println "third"
}

third.dependsOn('printVersion')

task printVersion (dependsOn: ['second', 'first']) {
	logger.quiet "Version: ${version}"
}

class ProjectVersion {
	Integer major
	Integer minor
	Boolean release
	
	ProjectVersion(Integer major, Integer minor) {
		this(major, minor, Boolean.FALSE)
	}
	
	ProjectVersion(Integer major, Integer minor, Boolean release) {
		this.major = major
		this.minor = minor
		this.release = release
	}
	
	@Override
	String toString() {
		return "${major}.${minor}-${release ? 'RELEASE' : 'SNAPSHOT'}"
	}
	
}